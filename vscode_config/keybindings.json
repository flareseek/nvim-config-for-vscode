// Place your key bindings in this file to override the defaults
[
      // leader when: "neovim.mode == normal && !terminalFocus && !inputBoxFocus"
      // ESC
      {
        "key": "ctrl+[",
        "command": "hideCodeActionWidget",
        "when": "codeActionMenuVisible"
      },
      {
        "key": "ctrl+[",
        "command": "editor.action.peekDefinition",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "key": "ctrl+[",
        "command": "workbench.action.closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
      },
      {
        "key": "ctrl+[",
        "command": "closePanel",
        "when": "!editorFocus && panelFocus"
      },
      {
        "key": "ctrl+[",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorFocus && !panelFocus"
      },
      {
        "key": "ctrl+[",
        "command": "search.action.focusSearchList",
        "when": "searchViewletVisible && searchInputBoxFocus"
      },
      {
        "key": "ctrl+[",
        "command": "filesExplorer.cancelCut",
        "when": "explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus"
      },
      {
        "key": "ctrl+[",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
      },
      {
        "key": "ctrl+[",
        "command": "editor.debug.action.closeExceptionWidget",
        "when": "exceptionWidgetVisible"
      },

      // // LSP
      // {
      //   "key": "g r",
      //   "command": "editor.action.rename",
      //   "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly && !inputBoxFocus && !terminalFocus && neovim.mode == 'normal'"
      // },
     
      // explorer
      {
        "key": "\\ t", // <leader>t
        "command": "workbench.action.toggleSidebarVisibility", 
        "when": "sideBarVisible && neovim.mode == normal && !terminalFocus && !inputBoxFocus"
      },
      {
        "key": "\\ t", // <leader>t
        "command": "workbench.action.focusSideBar",
        "when": "!sideBarVisible && neovim.mode == normal && !terminalFocus && !inputBoxFocus"
      },
      {
        "key": "\\ f", // <leader>f
        "command": "workbench.files.action.focusFilesExplorer", // workbench.view.explorer
        "when": "viewContainer.workbench.view.explorer.enabled && neovim.mode == normal && !terminalFocus && !inputBoxFocus"
      },
      {
        "key": "u",
        "command": "undo",
        "when": "explorerViewletVisible && explorerViewletFocus && !inputBoxFocus && !inputFocus"
      },
      {
        "key": "ctrl+r",
        "command": "redo",
        "when": "explorerViewletVisible && explorerViewletFocus && !inputBoxFocus && !inputFocus"
      },
      {
        "key": "ctrl+n",
        "command": "workbench.action.nextSideBarView",
        "when": "sideBarFocus"
      },
      {
        "key": "ctrl+p",
        "command": "workbench.action.previousSideBarView",
        "when": "sideBarFocus"
      },

      // navigation
      {
        "key": "ctrl+w k",
        "command": "workbench.action.navigateUp",
        "when": "!editorTextFocus && neovim.mode != 'cmdline'"
      },
      {
        "key": "ctrl+w k",
        "command": "-workbench.action.navigateUp",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
      },
      {
        "key": "ctrl+w j",
        "command": "workbench.action.navigateDown",
        "when": "!editorTextFocus && neovim.mode != 'cmdline'"
      },
      {
        "key": "ctrl+w j",
        "command": "-workbench.action.navigateDown",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
      },
      {
        "key": "ctrl+w h",
        "command": "workbench.action.navigateLeft",
        "when": "!editorTextFocus && neovim.mode != 'cmdline'"
      },
      {
        "key": "ctrl+w h",
        "command": "-workbench.action.navigateLeft",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
      },
      {
        "key": "ctrl+w l",
        "command": "workbench.action.navigateRight",
        "when": "!editorTextFocus && neovim.mode != 'cmdline'"
      },
      {
        "key": "ctrl+w l",
        "command": "-workbench.action.navigateRight",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
      },

      // debugger
      {
        "key": "\\ \\ p", // <leader><leader>p
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive' && neovim.mode == normal && !terminalFocus && !inputBoxFocus"
      },
      {
        "key": "\\ \\ o", // <leader><leader>o
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach && neovim.mode == normal && !terminalFocus && !inputBoxFocus"
      },
      {
        "key": "\\ \\ shift+R", // <leader><leader>R
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode && neovim.mode == normal && !terminalFocus && !inputBoxFocus",
      },
      {
        "key": "\\ \\ r", // <leader><leader>r
        "command": "dart.hotReload", // dart ONLY
        "when": "dart-code:isInDartDebugSession && inDebugMode && debugType == 'dart' || dart-code:service.reloadSources && inDebugMode && debugType == 'dart' && neovim.mode == normal && !terminalFocus && !inputBoxFocus"
      },

      // scroll
      {
        "key": "ctrl+u",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "editorScroll",
              "args": {
                "to": "up",
                "by": "halfPage"
              }
            },
            {
              "command": "cursorMove",
              "args": { "to": "viewPortCenter" }
            }
          ]
        }
      },
      {
        "key": "ctrl+d",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "editorScroll",
              "args": {
                "to": "down",
                "by": "halfPage"
              }
            },
            {
              "command": "cursorMove",
              "args": { "to": "viewPortCenter" }
            }
          ]
        }
      },
      {
        "key": "ctrl+b",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "editorScroll",
              "args": {
                "to": "up",
                "by": "page"
              }
            },
            {
              "command": "cursorMove",
              "args": {
                "to": "viewPortCenter"
              }
            }
          ]
        }
      },
      {
        "key": "ctrl+f",
        "command": "runCommands",
        "args": {
          "commands": [
            {
              "command": "editorScroll",
              "args": {
                "to": "down",
                "by": "page"
              }
            },
            {
              "command": "cursorMove",
              "args": {
                "to": "viewPortCenter"
              }
            }
          ]
        }
      },

]